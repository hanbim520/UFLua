using UnityEngine;
using UnityEngine.UI;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using NLua;
using System.IO;
using PluginsUI;
using ITween;
/** wine整理，Q710605420 UFLua 意为免费使用的unityLua，插件部分需要付费的，请自行付费，如有版权问题，整理者概不负责！Q群:479355429**/
public class ExampleBehaviour : MonoBehaviour {

    string source = @"
import 'System'
import 'UnityEngine'
import 'UnityEngine.UI'
import 'PluginsUI'
import 'DG.Tweening'
import 'ITween'
import 'Assembly-CSharp'	-- The user-code assembly generated by Unity.

local Angle = Vector3.up;
local Speed = 5;

local showEnv = false
local envScroll = Vector2.zero
local ButtonObj = nil

function Awake()   
    --transform:FindChild('Text'):GetComponent('Text').text =  'set text from lua script'
    -- ok text:GetComponent('Text').text   = 'set text from lua script'
    -- ok text.text = 'set text from lua script'
end

function Start()
   -- GameObject.Find('Canvas/Text'):GetComponent('Text').text = 'ffdfdasfds';     
     --GameObject.Find('Canvas/Text'):GetComponent('Text').text = 'set text from lua script'
   --  Debug.Log(GameObject.Find('Canvas/Button'):GetComponent('Button').onClick)
    -- GameObject.Find('Canvas/Button'):GetComponent('Button').onClick:AddListener(function()
    --    GameObject.Find('Canvas/Text'):GetComponent('Text').text = 'Hello'
   -- end)

     Debug.Log('name====> '..btnObj.gameObject.name)
     EventTriggerListener.Get(btnObj.gameObject).onDown = clicked;
     iTween.MoveTo(btnObj.gameObject, Vector3(100, 100, 0), 4);
end

function clicked()
    Debug.Log('OK')
end

function rotation()
    transform:RotateAround(transform.position,Angle,Speed * Time.deltaTime)    
--	if Input.GetKey(KeyCode.W) then
--		Speed = Speed + 1
--	end
--	if Input.GetKey(KeyCode.S) then
--		Speed = Speed - 1
--	end
--	if Input.GetKey(KeyCode.A) then
--		Angle.z = Angle.z + 1
--	end
--	if Input.GetKey(KeyCode.D) then
--		Angle.z = Angle.z - 1
--	end
end

function Update()
	rotation()

end

function OnGUI()
	
end
";
    
    Lua env;
    public GameObject cube;
    public Text text;
    public Button btnObj;
    void Awake() {
		env = new Lua();
		env.LoadCLRPackage();
		
		env["this"] = this; // Give the script access to the gameobject.
		env["transform"] = transform;
        env["cube"] = cube;
        env["btnObj"] = btnObj;
       // btnObj.transform.DOMoveX(100, 4f);
       // iTween.MoveTo(btnObj.gameObject, new Vector3(100, 100, 0), 4);
        //System.Object[] result = new System.Object[0];
        try {
			//result = env.DoString(source);
			env.DoString(source);
#if UNITY_IPHONE
            LuaBinder.RegisterNLuaDelegate(env);
#endif
        } catch(NLua.Exceptions.LuaException e) {
			Debug.LogError(FormatException(e), gameObject);
		}
        
	}

	void Start () {
		Call("Start");
        Debug.Log("Start");
        
//         for (int i = 0; i < 10; i++)
//         {
//             GameObject go = GameObject.Instantiate(cube);
//             go.transform.parent = null;
//         }
    }
	
	void Update () {
		Call("Update");
	}

	void OnGUI() {
		Call("OnGUI");
	}

	public System.Object[] Call(string function, params System.Object[] args) {
		System.Object[] result = new System.Object[0];
		if(env == null) return result;
		LuaFunction lf = env.GetFunction(function);
		if(lf == null) return result;
		try {
			// Note: calling a function that does not 
			// exist does not throw an exception.
			if(args != null) {
				result = lf.Call(args);
			} else {
				result = lf.Call();
			}
		} catch(NLua.Exceptions.LuaException e) {
			Debug.LogError(FormatException(e), gameObject);
		}
		return result;
	}

	public System.Object[] Call(string function) {
		return Call(function, null);
	}

	public static string FormatException(NLua.Exceptions.LuaException e) {
		string source = (string.IsNullOrEmpty(e.Source)) ? "<no source>" : e.Source.Substring(0, e.Source.Length - 2);
		return string.Format("{0}\nLua (at {2})", e.Message, string.Empty, source);
	}
}
